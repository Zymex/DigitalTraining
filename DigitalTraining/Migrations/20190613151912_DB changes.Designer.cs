// <auto-generated />
using System;
using DigitalTraining.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalTraining.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190613151912_DB changes")]
    partial class DBchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalTraining.ActiveDirectory.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("OperatorId");

                    b.Property<string>("SocketName");

                    b.Property<string>("Theme");

                    b.Property<int?>("UserPreferencesId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserPreferencesId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("DigitalTraining.ActiveDirectory.UserPreferences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTrainingBegun");

                    b.Property<string>("Describe");

                    b.Property<string>("Distinguish");

                    b.Property<string>("Employee");

                    b.Property<string>("Identify");

                    b.Property<string>("Manager");

                    b.Property<string>("ProcedureName");

                    b.Property<string>("ProcedureNumber");

                    b.Property<string>("Rev");

                    b.Property<string>("Training");

                    b.HasKey("Id");

                    b.ToTable("CertificationTrainingDocuments");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocumentQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer");

                    b.Property<int?>("CertificationTrainingDocumentId");

                    b.Property<string>("ExpectedAnswer");

                    b.Property<string>("QuestionDescription");

                    b.HasKey("Id");

                    b.HasIndex("CertificationTrainingDocumentId");

                    b.ToTable("CertificationTrainingDocumentQuestions");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocumentTopics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertificationTrainingDocumentId");

                    b.Property<DateTime>("EmployeeDateSigned");

                    b.Property<string>("EmployeeInitial");

                    b.Property<string>("ManagerDate");

                    b.Property<DateTime>("ManagerDateSigned");

                    b.Property<string>("TopicDescription");

                    b.Property<DateTime>("TrainerDateSigned");

                    b.Property<string>("TrainerInitial");

                    b.HasKey("Id");

                    b.HasIndex("CertificationTrainingDocumentId");

                    b.ToTable("CertificationTrainingDocumentTopics");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingCourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("TrainingCourseTypes");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourseName");

                    b.Property<DateTime>("DateOfTraining");

                    b.Property<string>("Instructor");

                    b.Property<string>("Location");

                    b.Property<string>("ProcedureNumber");

                    b.Property<string>("RevisionNumber");

                    b.Property<int?>("TrainingCourseTypeId");

                    b.HasKey("Id");

                    b.HasIndex("TrainingCourseTypeId");

                    b.ToTable("TrainingDocuments");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingHRDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Books");

                    b.Property<DateTime>("DateRequested");

                    b.Property<string>("Grades");

                    b.Property<Guid?>("TrainingDocumentId");

                    b.Property<string>("Tuition");

                    b.HasKey("Id");

                    b.HasIndex("TrainingDocumentId");

                    b.ToTable("TrainingHRDocuments");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingRoster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CostCenter");

                    b.Property<Guid>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<string>("EmployeeNumber");

                    b.Property<string>("PostTestScore");

                    b.Property<string>("PreTestScore");

                    b.Property<Guid?>("TrainingDocumentId");

                    b.HasKey("Id");

                    b.HasIndex("TrainingDocumentId");

                    b.ToTable("TrainingRosters");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationQuestionTemplate", b =>
                {
                    b.Property<int>("QuestionTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpectedAnswerTemplate");

                    b.Property<Guid?>("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");

                    b.Property<string>("QuestionDescriptionTemplate");

                    b.HasKey("QuestionTemplateId");

                    b.HasIndex("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");

                    b.ToTable("GeneralCertificationQuestionTemplates");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationTopicTemplate", b =>
                {
                    b.Property<int>("TopicTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");

                    b.Property<string>("TopicDescriptionTemplate");

                    b.HasKey("TopicTemplateId");

                    b.HasIndex("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");

                    b.ToTable("GeneralCertificationTopicTemplates");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationTrainingTemplate", b =>
                {
                    b.Property<Guid>("GeneralCertificationTemplateId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescribeTemplate");

                    b.Property<string>("DistinguishTemplate");

                    b.Property<string>("IdentifyTemplate");

                    b.Property<string>("ProceedureNameTemplate");

                    b.Property<string>("ProceedureNumberTemplate");

                    b.Property<string>("RevisionTemplate");

                    b.HasKey("GeneralCertificationTemplateId");

                    b.ToTable("GeneralCertificationTrainingTemplates");
                });

            modelBuilder.Entity("DigitalTraining.ActiveDirectory.ApplicationUser", b =>
                {
                    b.HasOne("DigitalTraining.ActiveDirectory.UserPreferences", "UserPreferences")
                        .WithMany()
                        .HasForeignKey("UserPreferencesId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocumentQuestions", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocument")
                        .WithMany("Questions")
                        .HasForeignKey("CertificationTrainingDocumentId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocumentTopics", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.GeneralCertificationTraining.CertificationTrainingDocument")
                        .WithMany("Topics")
                        .HasForeignKey("CertificationTrainingDocumentId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingDocument", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.GeneralTraining.TrainingCourseType", "TrainingCourseType")
                        .WithMany()
                        .HasForeignKey("TrainingCourseTypeId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingHRDocument", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.GeneralTraining.TrainingDocument")
                        .WithMany("TrainingHRDocument")
                        .HasForeignKey("TrainingDocumentId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.GeneralTraining.TrainingRoster", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.GeneralTraining.TrainingDocument")
                        .WithMany("TrainingRoster")
                        .HasForeignKey("TrainingDocumentId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationQuestionTemplate", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationTrainingTemplate")
                        .WithMany("QuestionTemplates")
                        .HasForeignKey("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");
                });

            modelBuilder.Entity("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationTopicTemplate", b =>
                {
                    b.HasOne("DigitalTraining._ApplicationModels.TemplatingSystem.GeneralCertificationTrainingTemplate")
                        .WithMany("TopicTemplates")
                        .HasForeignKey("GeneralCertificationTrainingTemplateGeneralCertificationTemplateId");
                });
#pragma warning restore 612, 618
        }
    }
}
